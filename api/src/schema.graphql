scalar Long

type Query {
  propertyCount: Int @cypher(statement: "MATCH (p:Property) RETURN COUNT(p)")
  cityValue: [CityValue]
    @cypher(
      statement: """
      MATCH (c:City)<-[:IN_CITY]-(p:Property)
      WHERE EXISTS(p.TotalValue)
      WITH c.name AS city, avg(p.TotalValue) AS average
      RETURN {city: city, average: average} AS obj
      """
    )
}

type CityValue {
  city: String
  average: Float
}

type City {
  _id: Long!
  name: String!
  propertys: [Property] @relation(name: "IN_CITY", direction: IN)
}

type Subdivision {
  _id: Long!
  name: String!
  propertys: [Property] @relation(name: "IN_SUBDIVISION", direction: IN)
}

type Neighborhood {
  _id: Long!
  name: String!
  propertys: [Property] @relation(name: "IN_NEIGHBORHOOD", direction: IN)
}

type Appraisal {
  _id: Long!
  building: Int!
  land: Int!
  property_id: String!
  total: Int!
  year: Int!
  propertys: [Property] @relation(name: "HAS_APPRAISAL", direction: IN)
}

type Property {
  _id: Long!
  AddressL_1: String
  AddressLin: String
  Assessment: String
  COUNTYCD: Int!
  CareOfTaxp: String
  Certificat: String
  CityStateZ: String
  Continuous: Float!
  FallowAcre: Float!
  FarmsiteAc: Float!
  ForestAcre: Float!
  GISAcres: Float!
  GrazingAcr: Float!
  IrrigatedA: Float!
  LegalDescr: String
  LevyDistri: String
  NonQualAcr: Float!
  OwnerAdd_1: String
  OwnerAdd_2: String
  OwnerAddre: String
  OwnerCity: String
  OwnerName: String
  OwnerState: String
  OwnerZipCo: String
  PropAccess: String
  PropType: String
  PropertyID: Int!
  Range: String
  SHAPE_Area: Float!
  SHAPE_Leng: Float!
  Section_: String
  Subdivisio: String
  TaxYear: Int!
  TotalAcres: Float!
  TotalBuild: Int!
  TotalLandV: Int!
  TotalValue: Int!
  Township: String
  WildHayAcr: Float!
  acres: Float
  address: String
  bedrooms: Int
  category: String
  full_baths: Int
  half_baths: Int
  heating: String
  id: ID!
  location: Point
  lot_size: Int
  polygon: [Point]
  sqft: Int
  style: String
  year_built: Int
  in_city: [City] @relation(name: "IN_CITY", direction: OUT)
  in_subdivision: [Subdivision]
    @relation(name: "IN_SUBDIVISION", direction: OUT)
  in_neighborhodd: [Neighborhood]
    @relation(name: "IN_NEIGHBORHOOD", direction: OUT)
  has_Apraisal: [Appraisal] @relation(name: "HAS_APPRAISAL", direction: OUT)
}
